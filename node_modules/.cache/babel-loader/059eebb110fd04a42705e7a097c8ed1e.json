{"ast":null,"code":"// 토큰에 가져오고, 저장하고, 지우는 함수들\nconst getCookie = name => {\n  let value = \"; \" + document.cookie;\n  let parts = value.split(`; ${name}=`); // [aa=xx/ aaa; aabb=ssss;]\n  // 쿠기가 없을때\n\n  if (parts.length === 2) {\n    return parts.pop().split(\";\").shift();\n  }\n};\n\nconst setCookie = function (name, value) {\n  let exp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;\n  let date = new Date();\n  date.setTime(date.getTime() + exp * 24 * 60 * 60 * 1000);\n  document.cookie = `${name}=${value}; expires = ${date.toUTCString()}`;\n};\n\nconst deleteCookie = name => {\n  let date = new Date(\"2020-01-01\").toUTCString();\n  console.log(date);\n  document.cookie = name + \"=; expires=\" + date;\n};\n\nexport { getCookie, setCookie, deleteCookie };","map":{"version":3,"sources":["C:/Users/coms/OneDrive/문서/GitHub/hanghae-react-intensive/week2/src/shared/Cookie.js"],"names":["getCookie","name","value","document","cookie","parts","split","length","pop","shift","setCookie","exp","date","Date","setTime","getTime","toUTCString","deleteCookie","console","log"],"mappings":"AAAA;AAEA,MAAMA,SAAS,GAAIC,IAAD,IAAU;AACxB,MAAIC,KAAK,GAAG,OAAOC,QAAQ,CAACC,MAA5B;AACA,MAAIC,KAAK,GAAGH,KAAK,CAACI,KAAN,CAAa,KAAIL,IAAK,GAAtB,CAAZ,CAFwB,CAEe;AAEvC;;AACA,MAAII,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACpB,WAAOF,KAAK,CAACG,GAAN,GAAYF,KAAZ,CAAkB,GAAlB,EAAuBG,KAAvB,EAAP;AACH;AACJ,CARD;;AAUA,MAAMC,SAAS,GAAG,UAACT,IAAD,EAAOC,KAAP,EAA0B;AAAA,MAAZS,GAAY,uEAAN,CAAM;AACxC,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBJ,GAAG,GAAG,EAAN,GAAW,EAAX,GAAgB,EAAhB,GAAqB,IAAnD;AAEAR,EAAAA,QAAQ,CAACC,MAAT,GAAmB,GAAEH,IAAK,IAAGC,KAAM,eAAcU,IAAI,CAACI,WAAL,EAAmB,EAApE;AACH,CALD;;AAOA,MAAMC,YAAY,GAAIhB,IAAD,IAAU;AAC3B,MAAIW,IAAI,GAAG,IAAIC,IAAJ,CAAS,YAAT,EAAuBG,WAAvB,EAAX;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEAT,EAAAA,QAAQ,CAACC,MAAT,GAAkBH,IAAI,GAAG,aAAP,GAAuBW,IAAzC;AACH,CALD;;AAOA,SAASZ,SAAT,EAAoBU,SAApB,EAA+BO,YAA/B","sourcesContent":["// 토큰에 가져오고, 저장하고, 지우는 함수들\r\n\r\nconst getCookie = (name) => {\r\n    let value = \"; \" + document.cookie;\r\n    let parts = value.split(`; ${name}=`); // [aa=xx/ aaa; aabb=ssss;]\r\n\r\n    // 쿠기가 없을때\r\n    if (parts.length === 2) {\r\n        return parts.pop().split(\";\").shift();\r\n    }\r\n};\r\n\r\nconst setCookie = (name, value, exp = 5) => {\r\n    let date = new Date();\r\n    date.setTime(date.getTime() + exp * 24 * 60 * 60 * 1000);\r\n\r\n    document.cookie = `${name}=${value}; expires = ${date.toUTCString()}`;\r\n};\r\n\r\nconst deleteCookie = (name) => {\r\n    let date = new Date(\"2020-01-01\").toUTCString();\r\n    console.log(date);\r\n\r\n    document.cookie = name + \"=; expires=\" + date;\r\n};\r\n\r\nexport { getCookie, setCookie, deleteCookie };\r\n"]},"metadata":{},"sourceType":"module"}