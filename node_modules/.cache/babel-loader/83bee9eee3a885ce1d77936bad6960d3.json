{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coms\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\hanghae-react-intensive\\\\week2\\\\src\\\\pages\\\\PostList.js\",\n    _s = $RefreshSig$();\n\n// PostList.js\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Post from \"../components/Post\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const post_list = useSelector(state => state.post.list);\n  const user_info = useSelector(state => state.user.user);\n  const is_loading = useSelector(state => state.post.is_loading);\n  const paging = useSelector(state => state.post.paging); // 이컴포넌트에서 한번만 가지고오면되니깐\n\n  React.useEffect(() => {\n    if (post_list.length === 0) {\n      dispatch(postActions.getPostFB());\n    }\n  }, []);\n  console.log(post_list);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [post_list.map((p, idx) => {\n      if (user_info && p.user_info.user_id === user_info.uid) {\n        return /*#__PURE__*/_jsxDEV(Post, { ...p,\n          is_me: true\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Post, { ...p\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 18\n        }, this);\n      }\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch(postActions.getPostFB(paging.next));\n      },\n      children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostList, \"Z1NBbvDwQ3UlvEK5/PNDqnmDgb0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["C:/Users/coms/OneDrive/문서/GitHub/hanghae-react-intensive/week2/src/pages/PostList.js"],"names":["React","useSelector","useDispatch","Post","actionCreators","postActions","PostList","props","dispatch","post_list","state","post","list","user_info","user","is_loading","paging","useEffect","length","getPostFB","console","log","map","p","idx","user_id","uid","id","next"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,uBAA9C;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAvB,CAA7B;AACA,QAAMC,SAAS,GAAGZ,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACI,IAAN,CAAWA,IAAvB,CAA7B;AACA,QAAMC,UAAU,GAAGd,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWI,UAAvB,CAA9B;AACA,QAAMC,MAAM,GAAGf,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWK,MAAvB,CAA1B,CAL0B,CAM1B;;AACAhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpB,QAAIR,SAAS,CAACS,MAAV,KAAqB,CAAzB,EAA4B;AAC1BV,MAAAA,QAAQ,CAACH,WAAW,CAACc,SAAZ,EAAD,CAAR;AACD;AACF,GAJD,EAIG,EAJH;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eAEGA,SAAS,CAACa,GAAV,CAAc,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACzB,UAAIX,SAAS,IAAIU,CAAC,CAACV,SAAF,CAAYY,OAAZ,KAAwBZ,SAAS,CAACa,GAAnD,EAAwD;AACtD,4BAAO,QAAC,IAAD,OAAqBH,CAArB;AAAwB,UAAA,KAAK;AAA7B,WAAWA,CAAC,CAACI,EAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BAAO,QAAC,IAAD,OAAqBJ;AAArB,WAAWA,CAAC,CAACI,EAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KANA,CAFH,eAUE;AACE,MAAA,OAAO,EAAE,MAAM;AACbnB,QAAAA,QAAQ,CAACH,WAAW,CAACc,SAAZ,CAAsBH,MAAM,CAACY,IAA7B,CAAD,CAAR;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAlCD;;GAAMtB,Q;UACaJ,W,EACCD,W,EACAA,W,EACCA,W,EACJA,W;;;KALXK,Q;AAoCN,eAAeA,QAAf","sourcesContent":["// PostList.js\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Post from \"../components/Post\";\r\nimport { actionCreators as postActions } from \"../redux/modules/post\";\r\n\r\nconst PostList = (props) => {\r\n  const dispatch = useDispatch();\r\n  const post_list = useSelector((state) => state.post.list);\r\n  const user_info = useSelector((state) => state.user.user);\r\n  const is_loading = useSelector((state) => state.post.is_loading);\r\n  const paging = useSelector((state) => state.post.paging);\r\n  // 이컴포넌트에서 한번만 가지고오면되니깐\r\n  React.useEffect(() => {\r\n    if (post_list.length === 0) {\r\n      dispatch(postActions.getPostFB());\r\n    }\r\n  }, []);\r\n\r\n  console.log(post_list);\r\n  return (\r\n    <React.Fragment>\r\n      {/* map을이용하여 개수만큼 포스트불러오기 */}\r\n      {post_list.map((p, idx) => {\r\n        if (user_info && p.user_info.user_id === user_info.uid) {\r\n          return <Post key={p.id} {...p} is_me />;\r\n        } else {\r\n          return <Post key={p.id} {...p} />;\r\n        }\r\n      })}\r\n\r\n      <button\r\n        onClick={() => {\r\n          dispatch(postActions.getPostFB(paging.next));\r\n        }}\r\n      >\r\n        추가하기\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"]},"metadata":{},"sourceType":"module"}