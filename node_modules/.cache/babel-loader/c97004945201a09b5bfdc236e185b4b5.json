{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coms\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\hanghae-react-intensive\\\\week2\\\\src\\\\shared\\\\Upload.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"../elements\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const uploading = useSelector(state => state.image.uploading);\n  const fileInput = React.useRef();\n\n  const selectFile = e => {\n    // e.target은 input이죠!\n    // input이 가진 files 객체를 살펴봅시다.\n    console.log(e.target.files); // 선택한 파일이 어떻게 저장되어 있나 봅시다.\n\n    console.log(e.target.files[0]); // ref로도 확인해봅시다. :)\n\n    console.log(fileInput.current.files[0]);\n    const reader = new FileReader();\n    const file = fileInput.current.files[0]; // file의 내장함수\n\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      console.log(reader.result);\n      dispatch(imageActions.setPreview(reader.result));\n    };\n  };\n\n  const uploadFB = () => {\n    if (!fileInput.current || fileInput.current.files.length === 0) {\n      window.alert(\"파일을 선택해주세요!\");\n      return;\n    }\n\n    dispatch(imageActions.uploadImageFB(fileInput.current.files[0]));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInput,\n      onChange: selectFile,\n      disabled: uploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      _onClick: uploadFB,\n      text: \"\\uC5C5\\uB85C\\uB4DC\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Upload, \"MOWWCPLHw+9WsXdUSqsC9RDX+HU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["C:/Users/coms/OneDrive/문서/GitHub/hanghae-react-intensive/week2/src/shared/Upload.js"],"names":["React","useDispatch","useSelector","Button","actionCreators","imageActions","Upload","props","dispatch","uploading","state","image","fileInput","useRef","selectFile","e","console","log","target","files","current","reader","FileReader","file","readAsDataURL","onloadend","result","setPreview","uploadFB","length","window","alert","uploadImageFB"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,SAASC,cAAc,IAAIC,YAA3B,QAA+C,wBAA/C;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,SAAS,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,SAAxB,CAA7B;AACA,QAAMG,SAAS,GAAGZ,KAAK,CAACa,MAAN,EAAlB;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACtB;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB,EAHsB,CAItB;;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ,EALsB,CAOtB;;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwB,CAAxB,CAAZ;AACA,UAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,UAAMC,IAAI,GAAGX,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwB,CAAxB,CAAb,CAVsB,CAYtB;;AACAE,IAAAA,MAAM,CAACG,aAAP,CAAqBD,IAArB;;AACAF,IAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACrBT,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,CAACK,MAAnB;AACAlB,MAAAA,QAAQ,CAACH,YAAY,CAACsB,UAAb,CAAwBN,MAAM,CAACK,MAA/B,CAAD,CAAR;AACH,KAHD;AAIH,GAlBD;;AAoBA,QAAME,QAAQ,GAAG,MAAM;AACnB,QAAI,CAAChB,SAAS,CAACQ,OAAX,IAAsBR,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwBU,MAAxB,KAAmC,CAA7D,EAAgE;AAC5DC,MAAAA,MAAM,CAACC,KAAP,CAAa,aAAb;AACA;AACH;;AAEDvB,IAAAA,QAAQ,CAACH,YAAY,CAAC2B,aAAb,CAA2BpB,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwB,CAAxB,CAA3B,CAAD,CAAR;AACH,GAPD;;AASA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,GAAG,EAAEP,SAFT;AAGI,MAAA,QAAQ,EAAEE,UAHd;AAII,MAAA,QAAQ,EAAEL;AAJd;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEmB,QAAlB;AAA4B,MAAA,IAAI,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA7CD;;GAAMtB,M;UACeL,W,EACCC,W;;;KAFhBI,M;AA+CN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"../elements\";\r\n\r\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\r\n\r\nconst Upload = (props) => {\r\n    const dispatch = useDispatch();\r\n    const uploading = useSelector((state) => state.image.uploading);\r\n    const fileInput = React.useRef();\r\n\r\n    const selectFile = (e) => {\r\n        // e.target은 input이죠!\r\n        // input이 가진 files 객체를 살펴봅시다.\r\n        console.log(e.target.files);\r\n        // 선택한 파일이 어떻게 저장되어 있나 봅시다.\r\n        console.log(e.target.files[0]);\r\n\r\n        // ref로도 확인해봅시다. :)\r\n        console.log(fileInput.current.files[0]);\r\n        const reader = new FileReader();\r\n        const file = fileInput.current.files[0];\r\n\r\n        // file의 내장함수\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            console.log(reader.result);\r\n            dispatch(imageActions.setPreview(reader.result));\r\n        };\r\n    };\r\n\r\n    const uploadFB = () => {\r\n        if (!fileInput.current || fileInput.current.files.length === 0) {\r\n            window.alert(\"파일을 선택해주세요!\");\r\n            return;\r\n        }\r\n\r\n        dispatch(imageActions.uploadImageFB(fileInput.current.files[0]));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <input\r\n                type=\"file\"\r\n                ref={fileInput}\r\n                onChange={selectFile}\r\n                disabled={uploading}\r\n            />\r\n            <Button _onClick={uploadFB} text=\"업로드하기\"></Button>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}