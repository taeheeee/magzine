{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport { auth } from \"../../shared/firebase\";\nimport firebase from \"firebase/app\"; // actions types\n\nconst LOG_IN = \"LOG_IN\";\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\"; // action creators\n\nconst logOut = createAction(LOG_OUT, user => ({\n  user\n}));\nconst getUser = createAction(GET_USER, user => ({\n  user\n}));\nconst setUser = createAction(SET_USER, user => ({\n  user\n})); // initialState\n\nconst initialState = {\n  user: null,\n  is_login: false\n};\nconst user_initial = {\n  user_name: \"mean\"\n};\n\nconst loginFB = (id, pwd) => {\n  return function (dispatch, getState, _ref) {\n    let {\n      history\n    } = _ref;\n    auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then(res => {\n      auth.signInWithEmailAndPassword(id, pwd).then(user => {\n        console.log(user);\n        dispatch(setUser({\n          user_name: user.user.displayName,\n          id: id,\n          user_profile: \"\",\n          uid: user.user.uid\n        }));\n        history.push(\"/\");\n      }).catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log((errorCode, errorMessage));\n      });\n    });\n  };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n  return function (dispatch, getState, _ref2) {\n    let {\n      history\n    } = _ref2;\n    auth.createUserWithEmailAndPassword(id, pwd).then(user => {\n      //Signed in\n      // ...\n      console.log(user);\n      auth.currentUser.updateProfile({\n        displayName: user_name\n      }).then(() => {\n        dispatch(setUser({\n          user_name: user_name,\n          id: id,\n          user_profile: \"\"\n        }));\n        history.push(\"/\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }).catch(error => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorCode, errorMessage);\n    });\n  };\n};\n\nconst loginCheckFB = () => {\n  return function (dispatch, getState, _ref3) {\n    let {\n      histroy\n    } = _ref3;\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        dispatch(setUser({\n          user_name: user.displayName,\n          user_profile: \"\",\n          id: user.email,\n          uid: user.uid\n        }));\n      } else {\n        // 로그인이 안되어 있으면 그냥 확실하게 로그아웃 시킨다.\n        dispatch(logOut());\n      }\n    });\n  };\n};\n\nconst logOutFB = () => {\n  return function (dispatch, getState, _ref4) {\n    let {\n      history\n    } = _ref4;\n    auth.signOut().then(() => {\n      dispatch(logOut());\n      history.replace(\"/\"); // replace 사용: 뒤로가기해도 원래의 페이지가 안나옴\n    });\n  };\n}; // reducer immer\n\n\nexport default handleActions({\n  [SET_USER]: (state, action) => produce(state, draft => {\n    setCookie(\"is_login\", \"success\");\n    draft.user = action.payload.user;\n    draft.is_login = true;\n  }),\n  [LOG_OUT]: (state, action) => produce(state, draft => {\n    deleteCookie(\"is_login\");\n    draft.user = null;\n    draft.is_login = false;\n  }),\n  [GET_USER]: (state, action) => produce(state, draft => {})\n}, initialState); // action creator export\n\nconst actionCreators = {\n  getUser,\n  logOut,\n  signupFB,\n  loginFB,\n  loginCheckFB,\n  logOutFB\n};\nexport { actionCreators };","map":{"version":3,"sources":["C:/Users/coms/OneDrive/문서/GitHub/hanghae-react-intensive/week2/src/redux/modules/user.js"],"names":["createAction","handleActions","produce","setCookie","getCookie","deleteCookie","auth","firebase","LOG_IN","LOG_OUT","GET_USER","SET_USER","logOut","user","getUser","setUser","initialState","is_login","user_initial","user_name","loginFB","id","pwd","dispatch","getState","history","setPersistence","Auth","Persistence","SESSION","then","res","signInWithEmailAndPassword","console","log","displayName","user_profile","uid","push","catch","error","errorCode","code","errorMessage","message","signupFB","createUserWithEmailAndPassword","currentUser","updateProfile","loginCheckFB","histroy","onAuthStateChanged","email","logOutFB","signOut","replace","state","action","draft","payload","actionCreators"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\n\r\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\r\n\r\nimport { auth } from \"../../shared/firebase\";\r\nimport firebase from \"firebase/app\";\r\n\r\n// actions types\r\n\r\nconst LOG_IN = \"LOG_IN\";\r\nconst LOG_OUT = \"LOG_OUT\";\r\nconst GET_USER = \"GET_USER\";\r\nconst SET_USER = \"SET_USER\";\r\n\r\n// action creators\r\n\r\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\r\nconst getUser = createAction(GET_USER, (user) => ({ user }));\r\nconst setUser = createAction(SET_USER, (user) => ({ user }));\r\n\r\n// initialState\r\nconst initialState = {\r\n    user: null,\r\n    is_login: false,\r\n};\r\n\r\nconst user_initial = {\r\n    user_name: \"mean\",\r\n};\r\n\r\nconst loginFB = (id, pwd) => {\r\n    return function (dispatch, getState, { history }) {\r\n        auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then(\r\n            (res) => {\r\n                auth.signInWithEmailAndPassword(id, pwd)\r\n                    .then((user) => {\r\n                        console.log(user);\r\n                        dispatch(\r\n                            setUser({\r\n                                user_name: user.user.displayName,\r\n                                id: id,\r\n                                user_profile: \"\",\r\n                                uid: user.user.uid,\r\n                            })\r\n                        );\r\n                        history.push(\"/\");\r\n                    })\r\n                    .catch((error) => {\r\n                        var errorCode = error.code;\r\n                        var errorMessage = error.message;\r\n\r\n                        console.log((errorCode, errorMessage));\r\n                    });\r\n            }\r\n        );\r\n    };\r\n};\r\n\r\nconst signupFB = (id, pwd, user_name) => {\r\n    return function (dispatch, getState, { history }) {\r\n        auth.createUserWithEmailAndPassword(id, pwd)\r\n            .then((user) => {\r\n                //Signed in\r\n                // ...\r\n                console.log(user);\r\n\r\n                auth.currentUser\r\n                    .updateProfile({\r\n                        displayName: user_name,\r\n                    })\r\n                    .then(() => {\r\n                        dispatch(\r\n                            setUser({\r\n                                user_name: user_name,\r\n                                id: id,\r\n                                user_profile: \"\",\r\n                            })\r\n                        );\r\n                        history.push(\"/\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                    });\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                console.log(errorCode, errorMessage);\r\n            });\r\n    };\r\n};\r\n\r\nconst loginCheckFB = () => {\r\n    return function (dispatch, getState, { histroy }) {\r\n        auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                dispatch(\r\n                    setUser({\r\n                        user_name: user.displayName,\r\n                        user_profile: \"\",\r\n                        id: user.email,\r\n                        uid: user.uid,\r\n                    })\r\n                );\r\n            } else {\r\n                // 로그인이 안되어 있으면 그냥 확실하게 로그아웃 시킨다.\r\n                dispatch(logOut());\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nconst logOutFB = () => {\r\n    return function (dispatch, getState, { history }) {\r\n        auth.signOut().then(() => {\r\n            dispatch(logOut());\r\n            history.replace(\"/\");\r\n            // replace 사용: 뒤로가기해도 원래의 페이지가 안나옴\r\n        });\r\n    };\r\n};\r\n// reducer immer\r\nexport default handleActions(\r\n    {\r\n        [SET_USER]: (state, action) =>\r\n            produce(state, (draft) => {\r\n                setCookie(\"is_login\", \"success\");\r\n                draft.user = action.payload.user;\r\n                draft.is_login = true;\r\n            }),\r\n        [LOG_OUT]: (state, action) =>\r\n            produce(state, (draft) => {\r\n                deleteCookie(\"is_login\");\r\n                draft.user = null;\r\n                draft.is_login = false;\r\n            }),\r\n        [GET_USER]: (state, action) => produce(state, (draft) => {}),\r\n    },\r\n    initialState\r\n);\r\n\r\n// action creator export\r\nconst actionCreators = {\r\n    getUser,\r\n    logOut,\r\n    signupFB,\r\n    loginFB,\r\n    loginCheckFB,\r\n    logOutFB,\r\n};\r\n\r\nexport { actionCreators };\r\n"]},"metadata":{},"sourceType":"module"}