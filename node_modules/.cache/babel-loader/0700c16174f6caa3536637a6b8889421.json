{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coms\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\hanghae-react-intensive\\\\week2\\\\src\\\\pages\\\\PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Post from \"../components/Post\";\nimport CommentList from \"../components/CommentList\";\nimport CommentWrite from \"../components/CommentWrite\";\nimport { useSelector } from \"react-redux\";\nimport user from \"../redux/modules/user\";\nimport { firestore } from \"../shared/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetail = props => {\n  _s();\n\n  const id = props.match.params.id;\n  console.log(id);\n  const user_info = useSelector(state => state.user.user);\n  const post_list = useSelector(store => store.post.list);\n  const post_idx = post_list.findIndex(p => p.id === id);\n  const post = post_list[post_idx];\n  React.useEffect(() => {\n    const postDB = firestore.collection(\"post\");\n    postDB.doc(id).get().then(doc => {\n      console.log(doc);\n      console.log(doc.data());\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Post, { ...post,\n      is_me: post.user_info.user_id === user_info.uid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentWrite, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostDetail, \"8kGGbLKC6QiqTEQ7x5S++hVHTMc=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["C:/Users/coms/OneDrive/문서/GitHub/hanghae-react-intensive/week2/src/pages/PostDetail.js"],"names":["React","Post","CommentList","CommentWrite","useSelector","user","firestore","PostDetail","props","id","match","params","console","log","user_info","state","post_list","store","post","list","post_idx","findIndex","p","useEffect","postDB","collection","doc","get","then","data","user_id","uid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACA,QAAMK,SAAS,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACV,IAAN,CAAWA,IAAvB,CAA7B;AACA,QAAMW,SAAS,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAvB,CAA7B;AACA,QAAMC,QAAQ,GAAGJ,SAAS,CAACK,SAAV,CAAqBC,CAAD,IAAOA,CAAC,CAACb,EAAF,KAASA,EAApC,CAAjB;AACA,QAAMS,IAAI,GAAGF,SAAS,CAACI,QAAD,CAAtB;AAEApB,EAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AACpB,UAAMC,MAAM,GAAGlB,SAAS,CAACmB,UAAV,CAAqB,MAArB,CAAf;AACAD,IAAAA,MAAM,CACHE,GADH,CACOjB,EADP,EAEGkB,GAFH,GAGGC,IAHH,CAGSF,GAAD,IAAS;AACbd,MAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYa,GAAG,CAACG,IAAJ,EAAZ;AACD,KANH;AAOD,GATD,EASG,EATH;AAWA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,IAAD,OAAUX,IAAV;AAAgB,MAAA,KAAK,EAAEA,IAAI,CAACJ,SAAL,CAAegB,OAAf,KAA2BhB,SAAS,CAACiB;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3BD;;GAAMxB,U;UAIcH,W,EACAA,W;;;KALdG,U;AA6BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport Post from \"../components/Post\";\r\nimport CommentList from \"../components/CommentList\";\r\nimport CommentWrite from \"../components/CommentWrite\";\r\nimport { useSelector } from \"react-redux\";\r\nimport user from \"../redux/modules/user\";\r\nimport { firestore } from \"../shared/firebase\";\r\nconst PostDetail = (props) => {\r\n  const id = props.match.params.id;\r\n\r\n  console.log(id);\r\n  const user_info = useSelector((state) => state.user.user);\r\n  const post_list = useSelector((store) => store.post.list);\r\n  const post_idx = post_list.findIndex((p) => p.id === id);\r\n  const post = post_list[post_idx];\r\n\r\n  React.useEffect(() => {\r\n    const postDB = firestore.collection(\"post\");\r\n    postDB\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        console.log(doc);\r\n        console.log(doc.data());\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Post {...post} is_me={post.user_info.user_id === user_info.uid} />\r\n      <CommentWrite />\r\n      <CommentList />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n"]},"metadata":{},"sourceType":"module"}