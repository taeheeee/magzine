{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coms\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\hanghae-react-intensive\\\\week2\\\\src\\\\components\\\\CommentList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Image, Text } from \"../elements\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const comment_list = useSelector(state => state.comment_list);\n  const {\n    post_id\n  } = props;\n  React.useEffect(() => {\n    if (!comment_list[post_id]) {\n      dispatch(commentActions.getCommentFB(post_id));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: comment_list[post_id].map(c => {\n        return /*#__PURE__*/_jsxDEV(CommentItem, { ...c\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}; // props를 받오오니깐 기본props만들기\n\n\n_s(CommentList, \"5RsKkgUDEVZ5gflQywIMZfCltyI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CommentList;\nCommentList.defaultProps = {\n  post_id: null\n};\nexport default CommentList;\n\nconst CommentItem = props => {\n  const {\n    user_profile,\n    user_name,\n    user_id,\n    post_id,\n    contents,\n    insert_dt\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    is_flex: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      is_flex: true,\n      width: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        shape: \"circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: user_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      is_flex: true,\n      margin: \"0px 4px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        margin: \"0px\",\n        children: contents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        margin: \"0px\",\n        children: insert_dt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = CommentItem;\nCommentItem.defaultProps = {\n  user_profile: \"\",\n  user_name: \"mean0\",\n  user_id: \"\",\n  post_id: 1,\n  contents: \"귀여운 고양이네요!\",\n  insert_dt: \"2021-01-01 19:00:00\"\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommentList\");\n$RefreshReg$(_c2, \"CommentItem\");","map":{"version":3,"sources":["C:/Users/coms/OneDrive/문서/GitHub/hanghae-react-intensive/week2/src/components/CommentList.js"],"names":["React","Grid","Image","Text","useDispatch","useSelector","actionCreators","commentActions","CommentList","props","dispatch","comment_list","state","post_id","useEffect","getCommentFB","map","c","id","defaultProps","CommentItem","user_profile","user_name","user_id","contents","insert_dt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,QAAkC,aAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAc,IAAIC,cAA3B,QAAiD,0BAAjD;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,YAAY,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAcJ,KAApB;AAEAT,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACH,YAAY,CAACE,OAAD,CAAjB,EAA4B;AAC1BH,MAAAA,QAAQ,CAACH,cAAc,CAACQ,YAAf,CAA4BF,OAA5B,CAAD,CAAR;AACD;AACF,GAJD,EAIG,EAJH;AAMA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,MAAd;AAAA,gBAEGF,YAAY,CAACE,OAAD,CAAZ,CAAsBG,GAAtB,CAA2BC,CAAD,IAAO;AAChC,4BAAO,QAAC,WAAD,OAA4BA;AAA5B,WAAkBA,CAAC,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AAFH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CArBD,C,CAuBA;;;GAvBMV,W;UACaJ,W,EACIC,W;;;KAFjBG,W;AAwBNA,WAAW,CAACW,YAAZ,GAA2B;AACzBN,EAAAA,OAAO,EAAE;AADgB,CAA3B;AAGA,eAAeL,WAAf;;AAEA,MAAMY,WAAW,GAAIX,KAAD,IAAW;AAC7B,QAAM;AAAEY,IAAAA,YAAF;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA,OAA3B;AAAoCV,IAAAA,OAApC;AAA6CW,IAAAA,QAA7C;AAAuDC,IAAAA;AAAvD,MACJhB,KADF;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,OAAO,MAAb;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,OAAO,MAAb;AAAc,MAAA,KAAK,EAAC,MAApB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,kBAAYa;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,IAAD;AAAM,MAAA,OAAO,MAAb;AAAc,MAAA,MAAM,EAAC,SAArB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,KAAb;AAAA,kBAAoBE;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,KAAb;AAAA,kBAAoBC;AAApB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;MAAML,W;AAiBNA,WAAW,CAACD,YAAZ,GAA2B;AACzBE,EAAAA,YAAY,EAAE,EADW;AAEzBC,EAAAA,SAAS,EAAE,OAFc;AAGzBC,EAAAA,OAAO,EAAE,EAHgB;AAIzBV,EAAAA,OAAO,EAAE,CAJgB;AAKzBW,EAAAA,QAAQ,EAAE,YALe;AAMzBC,EAAAA,SAAS,EAAE;AANc,CAA3B","sourcesContent":["import React from \"react\";\r\nimport { Grid, Image, Text } from \"../elements\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\r\n\r\nconst CommentList = (props) => {\r\n  const dispatch = useDispatch();\r\n  const comment_list = useSelector((state) => state.comment_list);\r\n  const { post_id } = props;\r\n\r\n  React.useEffect(() => {\r\n    if (!comment_list[post_id]) {\r\n      dispatch(commentActions.getCommentFB(post_id));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"16px\">\r\n        {/* 가지고 온 댓글 데이터를 뿌려주기 */}\r\n        {comment_list[post_id].map((c) => {\r\n          return <CommentItem key={c.id} {...c} />;\r\n        })}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n// props를 받오오니깐 기본props만들기\r\nCommentList.defaultProps = {\r\n  post_id: null,\r\n};\r\nexport default CommentList;\r\n\r\nconst CommentItem = (props) => {\r\n  const { user_profile, user_name, user_id, post_id, contents, insert_dt } =\r\n    props;\r\n  return (\r\n    <Grid is_flex>\r\n      <Grid is_flex width=\"auto\">\r\n        <Image shape=\"circle\" />\r\n        <Text bold>{user_name}</Text>\r\n      </Grid>\r\n      <Grid is_flex margin=\"0px 4px\">\r\n        <Text margin=\"0px\">{contents}</Text>\r\n        <Text margin=\"0px\">{insert_dt}</Text>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nCommentItem.defaultProps = {\r\n  user_profile: \"\",\r\n  user_name: \"mean0\",\r\n  user_id: \"\",\r\n  post_id: 1,\r\n  contents: \"귀여운 고양이네요!\",\r\n  insert_dt: \"2021-01-01 19:00:00\",\r\n};\r\n"]},"metadata":{},"sourceType":"module"}