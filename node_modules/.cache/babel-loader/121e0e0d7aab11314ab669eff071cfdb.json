{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coms\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\hanghae-react-intensive\\\\week2\\\\src\\\\pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Text, Input, Grid, Button } from \"../elements\";\nimport { getCookie, setCookie, deleteCookie } from \"../shared/Cookie\";\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { emailCheck } from \"../shared/validateEmail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [id, setId] = React.useState(\"\");\n  const [pwd, setPwd] = React.useState(\"\");\n\n  const login = () => {\n    if (id === \"\" || pwd === \"\") {\n      window.alert(\"아이디 혹은 비밀번호가 공란입니다! 입력해주세요\");\n      return;\n    }\n\n    if (!emailCheck(id)) {\n      window.alert(\"이메일 형식이 맞지 않습니다\");\n      return;\n    }\n\n    dispatch(userActions.loginFB(id, pwd));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"32px\",\n        bold: true,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"16px 0px\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          label: \"\\uC544\\uC774\\uB514\",\n          placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          _onChange: e => {\n            setId(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"16px 0px\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          label: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n          placeholder: \"\\uD328\\uC2A4\\uC6CC\\uB4DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          type: \"password\",\n          _onChange: e => {\n            setPwd(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\",\n        _onClick: () => {\n          login();\n          console.log(\"로그인 했어!\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"IeOQiE9KTi/5XVkREGntlAmA3zI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/coms/OneDrive/문서/GitHub/hanghae-react-intensive/week2/src/pages/Login.js"],"names":["React","Text","Input","Grid","Button","getCookie","setCookie","deleteCookie","useDispatch","actionCreators","userActions","emailCheck","Login","props","dispatch","id","setId","useState","pwd","setPwd","login","window","alert","loginFB","e","target","value","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,MAA5B,QAA0C,aAA1C;AAEA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,YAA/B,QAAmD,kBAAnD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,uBAA9C;AACA,SAASC,UAAT,QAA2B,yBAA3B;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,EAAD,EAAKC,KAAL,IAAchB,KAAK,CAACiB,QAAN,CAAe,EAAf,CAApB;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBnB,KAAK,CAACiB,QAAN,CAAe,EAAf,CAAtB;;AAEA,QAAMG,KAAK,GAAG,MAAM;AAChB,QAAIL,EAAE,KAAK,EAAP,IAAaG,GAAG,KAAK,EAAzB,EAA6B;AACzBG,MAAAA,MAAM,CAACC,KAAP,CAAa,4BAAb;AACA;AACH;;AACD,QAAI,CAACX,UAAU,CAACI,EAAD,CAAf,EAAqB;AACjBM,MAAAA,MAAM,CAACC,KAAP,CAAa,iBAAb;AACA;AACH;;AACDR,IAAAA,QAAQ,CAACJ,WAAW,CAACa,OAAZ,CAAoBR,EAApB,EAAwBG,GAAxB,CAAD,CAAR;AACH,GAVD;;AAYA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,MAAd;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,IAAI,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC,UAAd;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,oBADV;AAEI,UAAA,WAAW,EAAC,gEAFhB;AAGI,UAAA,SAAS,EAAGM,CAAD,IAAO;AACdR,YAAAA,KAAK,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAL;AACH;AALL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAeI,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC,UAAd;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,KAAK,EAAC,0BADV;AAEI,UAAA,WAAW,EAAC,gEAFhB;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,UAAA,SAAS,EAAGF,CAAD,IAAO;AACdL,YAAAA,MAAM,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACH;AANL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAfJ,eA0BI,QAAC,MAAD;AACI,QAAA,IAAI,EAAC,gCADT;AAEI,QAAA,QAAQ,EAAE,MAAM;AACZN,UAAAA,KAAK;AACLO,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AALL;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CAvDD;;GAAMhB,K;UACeJ,W;;;KADfI,K;AAyDN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\nimport { Text, Input, Grid, Button } from \"../elements\";\r\n\r\nimport { getCookie, setCookie, deleteCookie } from \"../shared/Cookie\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators as userActions } from \"../redux/modules/user\";\r\nimport { emailCheck } from \"../shared/validateEmail\";\r\n\r\nconst Login = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [id, setId] = React.useState(\"\");\r\n    const [pwd, setPwd] = React.useState(\"\");\r\n\r\n    const login = () => {\r\n        if (id === \"\" || pwd === \"\") {\r\n            window.alert(\"아이디 혹은 비밀번호가 공란입니다! 입력해주세요\");\r\n            return;\r\n        }\r\n        if (!emailCheck(id)) {\r\n            window.alert(\"이메일 형식이 맞지 않습니다\");\r\n            return;\r\n        }\r\n        dispatch(userActions.loginFB(id, pwd));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid padding=\"16px\">\r\n                <Text size=\"32px\" bold>\r\n                    로그인\r\n                </Text>\r\n\r\n                <Grid padding=\"16px 0px\">\r\n                    <Input\r\n                        label=\"아이디\"\r\n                        placeholder=\"아이디를 입력해주세요.\"\r\n                        _onChange={(e) => {\r\n                            setId(e.target.value);\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid padding=\"16px 0px\">\r\n                    <Input\r\n                        label=\"패스워드\"\r\n                        placeholder=\"패스워드 입력해주세요.\"\r\n                        type=\"password\"\r\n                        _onChange={(e) => {\r\n                            setPwd(e.target.value);\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n                <Button\r\n                    text=\"로그인하기\"\r\n                    _onClick={() => {\r\n                        login();\r\n                        console.log(\"로그인 했어!\");\r\n                    }}\r\n                ></Button>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}